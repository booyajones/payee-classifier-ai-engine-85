-- SQL migration to create upload-related tables and deduplication links

create extension if not exists "pgcrypto";
create extension if not exists "pg_trgm";

-- Table to track individual upload batches
create table if not exists upload_batches (
  id uuid primary key default gen_random_uuid(),
  created_at timestamptz not null default now(),
  job_id text,
  job_type text not null default 'direct',
  total_payees integer not null,
  business_count integer not null,
  individual_count integer not null,
  excluded_count integer not null,
  ai_processed_count integer not null,
  error_count integer not null,
  processing_time_ms integer not null
);

create index if not exists idx_upload_batches_job_id on upload_batches(job_id);
create index if not exists idx_upload_batches_created on upload_batches(created_at);

-- Rows belonging to a batch
create table if not exists upload_rows (
  id bigint generated by default as identity primary key,
  batch_id uuid not null references upload_batches(id) on delete cascade,
  row_index integer not null,
  payee_name text not null,
  normalized_name text not null,
  source_hash text not null,
  prompt_version text not null,
  original_data jsonb,
  inserted_at timestamptz not null default now(),
  unique(batch_id, row_index)
);

create index if not exists idx_upload_rows_batch on upload_rows(batch_id);
create index if not exists idx_upload_rows_normalized on upload_rows(normalized_name);
create index if not exists idx_upload_rows_normalized_trgm on upload_rows using gin (normalized_name gin_trgm_ops);

-- Classification results for each row
create table if not exists classifications (
  id bigint generated by default as identity primary key,
  row_id bigint not null references upload_rows(id) on delete cascade,
  classification jsonb not null,
  prompt_version text not null,
  created_at timestamptz not null default now(),
  unique(row_id)
);

create index if not exists idx_classifications_row on classifications(row_id);
create index if not exists idx_classifications_type on classifications((classification->>'classification'));

-- Links between canonical names and their duplicates
create table if not exists dedupe_links (
  id bigint generated by default as identity primary key,
  canonical_normalized text not null,
  duplicate_normalized text not null,
  created_at timestamptz not null default now(),
  unique(duplicate_normalized)
);

create index if not exists idx_dedupe_links_canonical on dedupe_links(canonical_normalized);
create index if not exists idx_dedupe_links_duplicate on dedupe_links(duplicate_normalized);
